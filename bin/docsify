#!/usr/bin/env node

const pkg = require('../package.json')
const run = require('../src')
const chalk = require('chalk')
const updateNotifier = require('update-notifier')

updateNotifier({ pkg: pkg }).notify()

require('yargonaut')
  .style('yellow', 'required')
  .helpStyle('green')
  .errorsStyle('red.bold')

var argv = require('yargs')
  .usage(chalk.bold('Usage: docsify <command> <path> [options]'))
  .command({
    command: 'init <path> [--local] [--theme vue]',
    alias: 'i',
    desc: chalk.gray('Creates new docs'),
    builder: (yargs) => yargs.options({
      'local': {
        alias: 'l',
        default: false,
        desc: chalk.gray('Copy docsify files to local.'),
        nargs: 0,
        requiresArg: false,
        type: 'boolean'
      },
      'theme': {
        alias: 't',
        default: 'vue',
        desc: chalk.gray('Theme file to be used.'),
        choices: ['vue', 'buble', 'dark', 'pure'],
        nargs: 1,
        requiresArg: true,
        type: 'string'
      }
    }),
    handler: (argv) => run.init(argv.path, argv.local, argv.theme)
  })
  .command({
    command: 'serve <path> [--port 3000]',
    alias: 's',
    desc: chalk.gray('Run local server to preview site.'),
    builder: (yargs) => yargs.options({
      'port': {
        alias: 'p',
        default: 3000,
        desc: chalk.gray('Listen port.'),
        nargs: 1,
        requiresArg: true,
        type: 'number'
      }
    }),
    handler: (argv) => run.serve(argv.path, argv.port)
  })
  .help()
  .option('help', {
    alias: 'h',
    type: 'boolean',
    desc: chalk.gray('Show help')
  })
  .version('\ndocsify-cli version:\n  ' + pkg.version + '\n')
  .option('version', {
    alias: 'v',
    type: 'boolean',
    desc: chalk.gray('Show version number')
  })
  .epilog(chalk.green('Documentation:') + '\n' +
          '  https://QingWei-Li.github.io/docsify\n' +
          '  https://QingWei-Li.github.io/docsify-cli\n')
  .argv
