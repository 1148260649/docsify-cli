#!/usr/bin/env node

'use strict'

var chalk = require('chalk')
var pkg = require('../package.json')
var cliVersion = pkg.version
var updateNotifier = require('update-notifier')
var run = require('../src')

updateNotifier({ pkg: pkg }).notify()

var argv = require('yargs')
  .usage(chalk.bold('Usage:') + ' $0 ' + chalk.red.bold('<command>') + ' ' + chalk.blue('[options]'), {
    'init': {
      desc: 'create new docs',
      short: 'i'
    },
    'serve': {
      desc: 'run serve to preview',
      short: 's'
    }
  })
  .command({
    command: 'init <path> [--local] [--theme vue]',
    alias: 'i',
    desc: 'create new docs',
    builder: (yargs) => return yargs
      .option('l', {
          alias: 'local',
          type: 'boolean',
          default: false,
          desc: chalk.gray('Copy docsify files to local. Default is false.')
        })
        .option('t', {
          alias: 'theme',
          type: 'string',
          default: 'vue',
          choices: ['vue', 'buble', 'dark', 'pure'],
          desc: chalk.gray('Theme file to be used.')
        }),
    handler: (argv) => run.init
  })
  .command({
    command: 'serve <path> [--port 3000]',
    alias: 's',
    desc: 'run serve to preview',
    builder: (yargs) => return yargs
      .option('p', {
          alias: 'port',
          type: integer,
          default: 3000,
          desc: chalk.gray('listen port')
        }),
    handler: (argv) => run.serve
  })
  .option('h', {
    alias: 'help',
    type: 'boolean',
    desc: chalk.gray('Show this help.')
  })
  .option('v', {
    alias: 'version',
    type: 'boolean',
    desc: chalk.gray('Print the docsify version.')
  })
  .help('help')
  .version(cliVersion, 'version', 'display version information')
  .example('docsify ' + chalk.red.bold('init') + ' ' + chalk.blue('--local') + ' ' + chalk.inverse('"./docs"'))
  .epilog('Read more about docsify on:\n' +
    '\t' + chalk.blue.underline('https://QingWei-Li.github.io/docsify') + '\n' +
    '\t' + chalk.blue.underline('https://QingWei-Li.github.io/docsify-cli'))
  .showHelpOnFail(false, chalk.red('Something went wrong!') + ' Run ' + chalk.inverse('docsify --help'))
  .argv
